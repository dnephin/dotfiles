meta:
  project: build-agent

mount=source:
  bind: .
  path: /go/src/github.com/circleci/build-agent

mount=buildcache:
  bind: ~/.cache/go-build
  path: /root/.cache/go-build

mount=modcache:
  bind: ~/go/pkg/mod
  path: /go/pkg/mod

mount=sshagent:
  bind: "{env.SSH_AUTH_SOCK}"
  path: /tmp/sshagent.sock

mount=tmpdir:
  bind: /tmp
  path: /tmp

image=builder:
  image: build-agent-dev
  context: dobifiles/
  dockerfile: Dockerfile.dev

job=shell:
  use: builder
  mounts: [source, buildcache, modcache, tmpdir, sshagent]
  env: [SSH_AUTH_SOCK=/tmp/sshagent.sock]
  interactive: true
  command: sh
  provide-docker: true

job=watch:
  use: builder
  mounts: [source, buildcache, modcache, tmpdir]
  interactive: true
  provide-docker: true
  command: |
    bash -c 'filewatcher -x vendor gotestsum -- $TEST_FLAGS -tags=integration'
  env:
    - 'GOTESTSUM_FORMAT=short-verbose'
    - 'TEST_FLAGS={env.TEST_FLAGS:}'
    - 'AWS_ACCESS_KEY_ID={env.AWS_ACCESS_KEY_ID:}'
    - 'AWS_SECRET_ACCESS_KEY={env.AWS_SECRET_ACCESS_KEY:}'
    - 'AWS_REGION=us-east-1'
    - 'S3_TEST_PATH={env.S3_TEST_PATH:}'

job=lint:
  use: builder
  mounts: [source]
  command: gometalinter ./...

image=racer:
  image: racer
  context: dobifiles
  steps: |
    FROM golang:1.10.3
    RUN apt-get update && apt-get install -y build-essential
    RUN echo 'export "PS1=# "' > ~/.bashrc
    WORKDIR /go/src/github.com/circleci/build-agent

job=race:
  use: racer
  mounts: [source]
  command: bash
  interactive: true
